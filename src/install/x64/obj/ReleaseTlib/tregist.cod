; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DM@JCBIPCJC@?$EA?$CI?$CD?$CJCopyright?5?$CIC?$CJ?51996?92016?5H?4Sh@ ; `string'
PUBLIC	??_C@_1BI@LEHNOINF@?$AAs?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AA?$CF?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_17LGLPFNOI@?$AA?2?$AA?$CF?$AAs?$AA?$AA@	; `string'
EXTRN	__imp_RegCloseKey:PROC
EXTRN	__imp_RegQueryValueExA:PROC
EXTRN	__imp_RegDeleteKeyW:PROC
EXTRN	__imp_RegQueryValueW:PROC
EXTRN	__imp_RegCreateKeyExW:PROC
EXTRN	__imp_RegQueryValueA:PROC
EXTRN	__imp_RegEnumKeyExW:PROC
EXTRN	__imp_RegSetValueExW:PROC
EXTRN	__imp_RegSetValueExA:PROC
EXTRN	__imp_RegOpenKeyExW:PROC
EXTRN	wcstol:PROC
EXTRN	__imp_RegDeleteValueW:PROC
EXTRN	__imp_RegEnumValueW:PROC
EXTRN	__imp_RegQueryValueExW:PROC
;	COMDAT ??_C@_17LGLPFNOI@?$AA?2?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17LGLPFNOI@?$AA?2?$AA?$CF?$AAs?$AA?$AA@ DB '\', 00H, '%', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LEHNOINF@?$AAs?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LEHNOINF@?$AAs?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AA?$CF?$AAs?$AA?$AA@ DB 's'
	DB	00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@JCBIPCJC@?$EA?$CI?$CD?$CJCopyright?5?$CIC?$CJ?51996?92016?5H?4Sh@
CONST	SEGMENT
??_C@_0DM@JCBIPCJC@?$EA?$CI?$CD?$CJCopyright?5?$CIC?$CJ?51996?92016?5H?4Sh@ DB '@'
	DB	'(#)Copyright (C) 1996-2016 H.Shirouzu', 09H, 09H, 'tregist.cp'
	DB	'p', 09H, 'Ver0.99', 00H			; `string'
PUBLIC	?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z		; TRegistry::DeleteKeyW
PUBLIC	?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z		; TRegistry::GetStrW
PUBLIC	?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z		; TRegistry::OpenKeyW
PUBLIC	?WtoS@@YAHPEB_WPEADHW4StrMode@@H@Z		; WtoS
PUBLIC	?DeleteKey@TRegistry@@QEAAHPEBD@Z		; TRegistry::DeleteKey
PUBLIC	?GetStr@TRegistry@@QEAAHPEBDPEADH@Z		; TRegistry::GetStr
PUBLIC	?CloseKey@TRegistry@@QEAAHXZ			; TRegistry::CloseKey
PUBLIC	?OpenKey@TRegistry@@QEAAHPEBDH@Z		; TRegistry::OpenKey
PUBLIC	??1TRegistry@@QEAA@XZ				; TRegistry::~TRegistry
PUBLIC	??0TRegistry@@QEAA@PEAUHKEY__@@W4StrMode@@@Z	; TRegistry::TRegistry
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+40
	DD	imagerel $unwind$?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z DD imagerel $LN14
	DD	imagerel $LN14+172
	DD	imagerel $unwind$?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteKey@TRegistry@@QEAAHPEBD@Z DD imagerel $LN32
	DD	imagerel $LN32+91
	DD	imagerel $unwind$?DeleteKey@TRegistry@@QEAAHPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z DD imagerel $LN72
	DD	imagerel $LN72+268
	DD	imagerel $unwind$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CloseKey@TRegistry@@QEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$?CloseKey@TRegistry@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenKey@TRegistry@@QEAAHPEBDH@Z DD imagerel $LN32
	DD	imagerel $LN32+98
	DD	imagerel $unwind$?OpenKey@TRegistry@@QEAAHPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TRegistry@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+36
	DD	imagerel $unwind$??1TRegistry@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TRegistry@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenKey@TRegistry@@QEAAHPEBDH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CloseKey@TRegistry@@QEAAHXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z DD imagerel ?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
	DD	0ffffffffH
	DD	imagerel ?GetStr@TRegistry@@QEAAHPEBDPEADH@Z+109
	DD	00H
	DD	imagerel ?GetStr@TRegistry@@QEAAHPEBDPEADH@Z+222
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetStr@TRegistry@@QEAAHPEBDPEADH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z DD 0c2711H
	DD	0f7427H
	DD	0e6422H
	DD	0d541dH
	DD	0c3418H
	DD	0f006720aH
	DD	0c002e004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteKey@TRegistry@@QEAAHPEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z DD 061401H
	DD	0b6414H
	DD	0a3414H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ??0TRegistry@@QEAA@PEAUHKEY__@@W4StrMode@@@Z
_TEXT	SEGMENT
this$ = 8
top_key$ = 16
mode$dead$ = 24
??0TRegistry@@QEAA@PEAUHKEY__@@W4StrMode@@@Z PROC	; TRegistry::TRegistry, COMDAT

; 31   : 	topKey = top_key;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 32   : 	strMode = mode;
; 33   : 	openCnt = 0;
; 34   : }

  00003	48 8b c1	 mov	 rax, rcx
  00006	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [rcx+12], 1
  0000d	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [rcx+8], 0
  00014	c3		 ret	 0
??0TRegistry@@QEAA@PEAUHKEY__@@W4StrMode@@@Z ENDP	; TRegistry::TRegistry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ??1TRegistry@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1TRegistry@@QEAA@XZ PROC				; TRegistry::~TRegistry, COMDAT

; 37   : {

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 38   : 	while (openCnt > 0) {

  00006	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	7e 0f		 jle	 SHORT $LN3@TRegistry
  0000f	90		 npad	 1
$LL2@TRegistry:

; 39   : 		CloseKey();

  00010	48 8b cb	 mov	 rcx, rbx
  00013	e8 00 00 00 00	 call	 ?CloseKey@TRegistry@@QEAAHXZ ; TRegistry::CloseKey
  00018	83 7b 08 00	 cmp	 DWORD PTR [rbx+8], 0
  0001c	7f f2		 jg	 SHORT $LL2@TRegistry
$LN3@TRegistry:

; 40   : 	}
; 41   : }

  0001e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00022	5b		 pop	 rbx
  00023	c3		 ret	 0
??1TRegistry@@QEAA@XZ ENDP				; TRegistry::~TRegistry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?OpenKey@TRegistry@@QEAAHPEBDH@Z
_TEXT	SEGMENT
this$ = 48
subKey$ = 56
createFlg$dead$ = 64
?OpenKey@TRegistry@@QEAAHPEBDH@Z PROC			; TRegistry::OpenKey, COMDAT

; 78   : {

$LN32:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  0000d	48 85 d2	 test	 rdx, rdx
  00010	74 28		 je	 SHORT $LN14@OpenKey
  00012	83 79 0c 00	 cmp	 DWORD PTR [rcx+12], 0
  00016	48 8b ca	 mov	 rcx, rdx
  00019	75 07		 jne	 SHORT $LN12@OpenKey
  0001b	e8 00 00 00 00	 call	 ?U8toW@@YAPEA_WPEBDH@Z	; U8toW
  00020	eb 05		 jmp	 SHORT $LN30@OpenKey
$LN12@OpenKey:
  00022	e8 00 00 00 00	 call	 ?AtoW@@YAPEA_WPEBDH@Z	; AtoW
$LN30@OpenKey:

; 172  : 		return str ? str : L"";

  00027	48 85 c0	 test	 rax, rax
  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  00031	48 8b d8	 mov	 rbx, rax

; 172  : 		return str ? str : L"";

  00034	48 0f 45 d0	 cmovne	 rdx, rax
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 80   : 	return	OpenKeyW(subKey ? subkey_w.s() : NULL, createFlg);

  00038	eb 04		 jmp	 SHORT $LN4@OpenKey
$LN14@OpenKey:
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  0003a	33 db		 xor	 ebx, ebx
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 80   : 	return	OpenKeyW(subKey ? subkey_w.s() : NULL, createFlg);

  0003c	8b d3		 mov	 edx, ebx
$LN4@OpenKey:
  0003e	48 8b cf	 mov	 rcx, rdi
  00041	e8 00 00 00 00	 call	 ?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z ; TRegistry::OpenKeyW
  00046	8b f8		 mov	 edi, eax
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 114  : 		if (str) {

  00048	48 85 db	 test	 rbx, rbx
  0004b	74 0a		 je	 SHORT $LN27@OpenKey

; 115  : 			delete [] str;

  0004d	48 8b cb	 mov	 rcx, rbx
  00050	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 80   : 	return	OpenKeyW(subKey ? subkey_w.s() : NULL, createFlg);

  00055	8b c7		 mov	 eax, edi
$LN27@OpenKey:

; 81   : }

  00057	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
?OpenKey@TRegistry@@QEAAHPEBDH@Z ENDP			; TRegistry::OpenKey
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?CloseKey@TRegistry@@QEAAHXZ
_TEXT	SEGMENT
this$ = 48
?CloseKey@TRegistry@@QEAAHXZ PROC			; TRegistry::CloseKey, COMDAT

; 110  : {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 111  : 	if (openCnt <= 0) {

  00004	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00007	48 8b d1	 mov	 rdx, rcx
  0000a	85 c0		 test	 eax, eax
  0000c	7f 07		 jg	 SHORT $LN2@CloseKey

; 112  : 		return	FALSE;

  0000e	33 c0		 xor	 eax, eax

; 117  : }

  00010	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00014	c3		 ret	 0
$LN2@CloseKey:

; 113  : 	}
; 114  : 	::RegCloseKey(hKey[--openCnt]);

  00015	ff c8		 dec	 eax
  00017	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  0001a	48 63 c8	 movsxd	 rcx, eax
  0001d	48 8b 4c ca 10	 mov	 rcx, QWORD PTR [rdx+rcx*8+16]
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegCloseKey

; 115  : 
; 116  : 	return	TRUE;

  00028	b8 01 00 00 00	 mov	 eax, 1

; 117  : }

  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	c3		 ret	 0
?CloseKey@TRegistry@@QEAAHXZ ENDP			; TRegistry::CloseKey
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?GetStr@TRegistry@@QEAAHPEBDPEADH@Z
_TEXT	SEGMENT
$T1 = 32
subKey_w$ = 40
this$ = 96
subKey$ = 104
str$ = 112
size_byte$dead$ = 120
?GetStr@TRegistry@@QEAAHPEBDPEADH@Z PROC		; TRegistry::GetStr, COMDAT

; 205  : {

$LN72:
  00000	41 54		 push	 r12
  00002	41 56		 push	 r14
  00004	41 57		 push	 r15
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00018	48 89 6c 24 68	 mov	 QWORD PTR [rsp+104], rbp
  0001d	48 89 74 24 70	 mov	 QWORD PTR [rsp+112], rsi
  00022	48 89 7c 24 78	 mov	 QWORD PTR [rsp+120], rdi
  00027	4d 8b f8	 mov	 r15, r8
  0002a	48 8b ea	 mov	 rbp, rdx
  0002d	4c 8b f1	 mov	 r14, rcx
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  00030	33 ff		 xor	 edi, edi
  00032	48 85 d2	 test	 rdx, rdx
  00035	74 26		 je	 SHORT $LN17@GetStr
  00037	39 79 0c	 cmp	 DWORD PTR [rcx+12], edi
  0003a	48 8b ca	 mov	 rcx, rdx
  0003d	75 0f		 jne	 SHORT $LN15@GetStr
  0003f	e8 00 00 00 00	 call	 ?U8toW@@YAPEA_WPEBDH@Z	; U8toW
  00044	48 8b d8	 mov	 rbx, rax
  00047	48 89 44 24 28	 mov	 QWORD PTR subKey_w$[rsp], rax
  0004c	eb 17		 jmp	 SHORT $LN18@GetStr
$LN15@GetStr:
  0004e	e8 00 00 00 00	 call	 ?AtoW@@YAPEA_WPEBDH@Z	; AtoW
  00053	48 8b d8	 mov	 rbx, rax
  00056	48 89 44 24 28	 mov	 QWORD PTR subKey_w$[rsp], rax
  0005b	eb 08		 jmp	 SHORT $LN18@GetStr
$LN17@GetStr:
  0005d	48 8b df	 mov	 rbx, rdi
  00060	48 89 5c 24 28	 mov	 QWORD PTR subKey_w$[rsp], rbx
$LN18@GetStr:

; 101  : 		len = -1;

  00065	48 83 c9 ff	 or	 rcx, -1
  00069	89 4c 24 30	 mov	 DWORD PTR subKey_w$[rsp+8], ecx

; 106  : 			str = new WCHAR [_len];

  0006d	b8 02 00 00 00	 mov	 eax, 2
  00072	41 bc 04 01 00
	00		 mov	 r12d, 260		; 00000104H
  00078	49 f7 e4	 mul	 r12
  0007b	48 0f 40 c1	 cmovo	 rax, rcx
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  00087	48 8b f0	 mov	 rsi, rax

; 107  : 			*str=0;

  0008a	66 89 38	 mov	 WORD PTR [rax], di
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 209  : 	if (!GetStrW(subKey ? subKey_w.s() : NULL, str_w.Buf(), size_byte * 2)) {

  0008d	48 85 ed	 test	 rbp, rbp
  00090	74 10		 je	 SHORT $LN4@GetStr
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 172  : 		return str ? str : L"";

  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
  00099	48 85 db	 test	 rbx, rbx
  0009c	48 0f 45 d3	 cmovne	 rdx, rbx
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 209  : 	if (!GetStrW(subKey ? subKey_w.s() : NULL, str_w.Buf(), size_byte * 2)) {

  000a0	eb 03		 jmp	 SHORT $LN5@GetStr
$LN4@GetStr:
  000a2	48 8b d7	 mov	 rdx, rdi
$LN5@GetStr:
  000a5	4c 8b c6	 mov	 r8, rsi
  000a8	49 8b ce	 mov	 rcx, r14
  000ab	e8 00 00 00 00	 call	 ?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z ; TRegistry::GetStrW
  000b0	85 c0		 test	 eax, eax
  000b2	74 21		 je	 SHORT $LN8@GetStr
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 53   : 	return (mode == BY_UTF8) ? WtoU8(src, dst, bufsize, max_len)

  000b4	45 8b c4	 mov	 r8d, r12d
  000b7	49 8b d7	 mov	 rdx, r15
  000ba	48 8b ce	 mov	 rcx, rsi
  000bd	41 83 7e 0c 00	 cmp	 DWORD PTR [r14+12], 0
  000c2	75 07		 jne	 SHORT $LN57@GetStr
  000c4	e8 00 00 00 00	 call	 ?WtoU8@@YAHPEB_WPEADHH@Z ; WtoU8
  000c9	eb 05		 jmp	 SHORT $LN58@GetStr
$LN57@GetStr:
  000cb	e8 00 00 00 00	 call	 ?WtoA@@YAHPEB_WPEADHH@Z	; WtoA
$LN58@GetStr:
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 213  : 	return	TRUE;

  000d0	bf 01 00 00 00	 mov	 edi, 1
$LN8@GetStr:
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 115  : 			delete [] str;

  000d5	48 8b ce	 mov	 rcx, rsi
  000d8	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
  000dd	90		 npad	 1

; 114  : 		if (str) {

  000de	48 85 db	 test	 rbx, rbx
  000e1	74 08		 je	 SHORT $LN71@GetStr

; 115  : 			delete [] str;

  000e3	48 8b cb	 mov	 rcx, rbx
  000e6	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN71@GetStr:
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 213  : 	return	TRUE;

  000eb	8b c7		 mov	 eax, edi

; 214  : }

  000ed	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  000f2	48 8b 6c 24 68	 mov	 rbp, QWORD PTR [rsp+104]
  000f7	48 8b 74 24 70	 mov	 rsi, QWORD PTR [rsp+112]
  000fc	48 8b 7c 24 78	 mov	 rdi, QWORD PTR [rsp+120]
  00101	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00105	41 5f		 pop	 r15
  00107	41 5e		 pop	 r14
  00109	41 5c		 pop	 r12
  0010b	c3		 ret	 0
?GetStr@TRegistry@@QEAAHPEBDPEADH@Z ENDP		; TRegistry::GetStr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
subKey_w$ = 40
this$ = 96
subKey$ = 104
str$ = 112
size_byte$dead$ = 120
?dtor$0@?0??GetStr@TRegistry@@QEAAHPEBDPEADH@Z@4HA PROC	; `TRegistry::GetStr'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR subKey_w$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Wstr@@QEAA@XZ	; Wstr::~Wstr
?dtor$0@?0??GetStr@TRegistry@@QEAAHPEBDPEADH@Z@4HA ENDP	; `TRegistry::GetStr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
subKey_w$ = 40
this$ = 96
subKey$ = 104
str$ = 112
size_byte$dead$ = 120
?dtor$0@?0??GetStr@TRegistry@@QEAAHPEBDPEADH@Z@4HA PROC	; `TRegistry::GetStr'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR subKey_w$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Wstr@@QEAA@XZ	; Wstr::~Wstr
?dtor$0@?0??GetStr@TRegistry@@QEAAHPEBDPEADH@Z@4HA ENDP	; `TRegistry::GetStr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?DeleteKey@TRegistry@@QEAAHPEBD@Z
_TEXT	SEGMENT
this$ = 48
subKey$dead$ = 56
?DeleteKey@TRegistry@@QEAAHPEBD@Z PROC			; TRegistry::DeleteKey, COMDAT

; 285  : {

$LN32:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  0000a	83 79 0c 00	 cmp	 DWORD PTR [rcx+12], 0
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 285  : {

  0000e	48 8b f9	 mov	 rdi, rcx
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_08DDBGNLLL@FastCopy?$AA@
  00018	75 07		 jne	 SHORT $LN12@DeleteKey
  0001a	e8 00 00 00 00	 call	 ?U8toW@@YAPEA_WPEBDH@Z	; U8toW
  0001f	eb 05		 jmp	 SHORT $LN30@DeleteKey
$LN12@DeleteKey:
  00021	e8 00 00 00 00	 call	 ?AtoW@@YAPEA_WPEBDH@Z	; AtoW
$LN30@DeleteKey:

; 172  : 		return str ? str : L"";

  00026	48 85 c0	 test	 rax, rax
  00029	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 287  : 	return	DeleteKeyW(subKey ? subKey_w.s() : NULL);

  00030	48 8b cf	 mov	 rcx, rdi
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 100  : 		str = _str ? mode == BY_UTF8 ? U8toW(_str) : AtoW(_str) : NULL;

  00033	48 8b d8	 mov	 rbx, rax

; 172  : 		return str ? str : L"";

  00036	48 0f 45 d0	 cmovne	 rdx, rax
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 287  : 	return	DeleteKeyW(subKey ? subKey_w.s() : NULL);

  0003a	e8 00 00 00 00	 call	 ?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z ; TRegistry::DeleteKeyW
  0003f	8b f8		 mov	 edi, eax
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h

; 114  : 		if (str) {

  00041	48 85 db	 test	 rbx, rbx
  00044	74 0a		 je	 SHORT $LN27@DeleteKey

; 115  : 			delete [] str;

  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp

; 287  : 	return	DeleteKeyW(subKey ? subKey_w.s() : NULL);

  0004e	8b c7		 mov	 eax, edi
$LN27@DeleteKey:

; 288  : }

  00050	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?DeleteKey@TRegistry@@QEAAHPEBD@Z ENDP			; TRegistry::DeleteKey
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tapi32u8.h
;	COMDAT ?WtoS@@YAHPEB_WPEADHW4StrMode@@H@Z
_TEXT	SEGMENT
src$ = 8
dst$ = 16
bufsize$dead$ = 24
mode$ = 32
max_len$dead$ = 40
?WtoS@@YAHPEB_WPEADHW4StrMode@@H@Z PROC			; WtoS, COMDAT

; 53   : 	return (mode == BY_UTF8) ? WtoU8(src, dst, bufsize, max_len)

  00000	41 b8 04 01 00
	00		 mov	 r8d, 260		; 00000104H
  00006	45 85 c9	 test	 r9d, r9d
  00009	0f 84 00 00 00
	00		 je	 ?WtoU8@@YAHPEB_WPEADHH@Z ; WtoU8
$LN3@WtoS:
  0000f	e9 00 00 00 00	 jmp	 ?WtoA@@YAHPEB_WPEADHH@Z	; WtoA
?WtoS@@YAHPEB_WPEADHW4StrMode@@H@Z ENDP			; WtoS
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z
_TEXT	SEGMENT
this$ = 64
subKey$ = 72
createFlg$dead$ = 80
?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z PROC			; TRegistry::OpenKeyW, COMDAT

; 84   : {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 85   : 	HKEY	parentKey = (openCnt == 0 ? topKey : hKey[openCnt -1]);

  0000f	4c 63 41 08	 movsxd	 r8, DWORD PTR [rcx+8]
  00013	48 8b f2	 mov	 rsi, rdx
  00016	48 8b d9	 mov	 rbx, rcx
  00019	45 85 c0	 test	 r8d, r8d
  0001c	75 05		 jne	 SHORT $LN9@OpenKeyW
  0001e	48 8b 39	 mov	 rdi, QWORD PTR [rcx]
  00021	eb 0c		 jmp	 SHORT $LN10@OpenKeyW
$LN9@OpenKeyW:
  00023	41 8d 40 ff	 lea	 eax, DWORD PTR [r8-1]
  00027	48 63 c8	 movsxd	 rcx, eax
  0002a	48 8b 7c cb 10	 mov	 rdi, QWORD PTR [rbx+rcx*8+16]
$LN10@OpenKeyW:

; 86   : 
; 87   : 	if (openCnt >= MAX_KEYARRAY) {

  0002f	41 83 f8 1e	 cmp	 r8d, 30
  00033	7c 12		 jl	 SHORT $LN2@OpenKeyW
$LN12@OpenKeyW:

; 88   : 		return	FALSE;

  00035	33 c0		 xor	 eax, eax

; 105  : 	else
; 106  : 		return	FALSE;
; 107  : }

  00037	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0003c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00041	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
$LN2@OpenKeyW:

; 89   : 	}
; 90   : 	DWORD	tmp;
; 91   : 	LONG	status;
; 92   : 
; 93   : 	if (createFlg) {
; 94   : 		status = ::RegCreateKeyExW(parentKey, subKey, 0, NULL, REG_OPTION_NON_VOLATILE,
; 95   : 					KEY_ALL_ACCESS, NULL, &hKey[openCnt], &tmp);
; 96   : 	}
; 97   : 	else {
; 98   : 		if ((status = ::RegOpenKeyExW(parentKey, subKey, 0, KEY_ALL_ACCESS, &hKey[openCnt]))
; 99   : 				!= ERROR_SUCCESS)

  00047	49 8d 40 02	 lea	 rax, QWORD PTR [r8+2]
  0004b	41 b9 3f 00 0f
	00		 mov	 r9d, 983103		; 000f003fH
  00051	48 8d 0c c3	 lea	 rcx, QWORD PTR [rbx+rax*8]
  00055	45 33 c0	 xor	 r8d, r8d
  00058	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0005d	48 8b cf	 mov	 rcx, rdi
  00060	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExW
  00066	85 c0		 test	 eax, eax
  00068	74 2a		 je	 SHORT $LN11@OpenKeyW

; 100  : 			status = ::RegOpenKeyExW(parentKey, subKey, 0, KEY_READ, &hKey[openCnt]);

  0006a	48 63 43 08	 movsxd	 rax, DWORD PTR [rbx+8]
  0006e	41 b9 19 00 02
	00		 mov	 r9d, 131097		; 00020019H
  00074	48 83 c0 02	 add	 rax, 2
  00078	45 33 c0	 xor	 r8d, r8d
  0007b	48 8b cf	 mov	 rcx, rdi
  0007e	48 8d 14 c3	 lea	 rdx, QWORD PTR [rbx+rax*8]
  00082	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  00087	48 8b d6	 mov	 rdx, rsi
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExW

; 101  : 	}
; 102  : 
; 103  : 	if (status == ERROR_SUCCESS)

  00090	85 c0		 test	 eax, eax
  00092	75 a1		 jne	 SHORT $LN12@OpenKeyW
$LN11@OpenKeyW:

; 104  : 		return	openCnt++, TRUE;

  00094	ff 43 08	 inc	 DWORD PTR [rbx+8]
  00097	b8 01 00 00 00	 mov	 eax, 1

; 105  : 	else
; 106  : 		return	FALSE;
; 107  : }

  0009c	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000a1	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000a6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?OpenKeyW@TRegistry@@QEAAHPEB_WH@Z ENDP			; TRegistry::OpenKeyW
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z
_TEXT	SEGMENT
size_byte$ = 48
this$ = 80
subKey$ = 88
str$ = 96
size_byte$dead$ = 104
type$ = 104
?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z PROC		; TRegistry::GetStrW, COMDAT

; 228  : {

$LN5:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	49 89 5b 08	 mov	 QWORD PTR [r11+8], rbx
  00007	49 89 73 10	 mov	 QWORD PTR [r11+16], rsi
  0000b	45 89 4b 20	 mov	 DWORD PTR [r11+32], r9d
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 229  : 	DWORD	type = REG_SZ;
; 230  : 
; 231  : 	if (::RegQueryValueExW(hKey[openCnt -1], subKey, 0, &type, (BYTE *)str,
; 232  : 			(DWORD *)&size_byte) != ERROR_SUCCESS
; 233  : 	&&  ::RegQueryValueW(hKey[openCnt -1], subKey, str, (LPLONG)&size_byte) != ERROR_SUCCESS)

  00014	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00017	4d 8d 4b 20	 lea	 r9, QWORD PTR [r11+32]
  0001b	ff c8		 dec	 eax
  0001d	c7 44 24 30 08
	02 00 00	 mov	 DWORD PTR size_byte$[rsp], 520 ; 00000208H
  00025	48 8b d9	 mov	 rbx, rcx
  00028	c7 44 24 68 01
	00 00 00	 mov	 DWORD PTR type$[rsp], 1
  00030	48 63 c8	 movsxd	 rcx, eax
  00033	49 8b f8	 mov	 rdi, r8
  00036	49 8d 43 e8	 lea	 rax, QWORD PTR [r11-24]
  0003a	48 8b f2	 mov	 rsi, rdx
  0003d	49 89 43 e0	 mov	 QWORD PTR [r11-32], rax
  00041	4d 89 43 d8	 mov	 QWORD PTR [r11-40], r8
  00045	45 33 c0	 xor	 r8d, r8d
  00048	48 8b 4c cb 10	 mov	 rcx, QWORD PTR [rbx+rcx*8+16]
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExW
  00053	85 c0		 test	 eax, eax
  00055	74 34		 je	 SHORT $LN2@GetStrW
  00057	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  0005a	4c 8d 4c 24 30	 lea	 r9, QWORD PTR size_byte$[rsp]
  0005f	ff c8		 dec	 eax
  00061	4c 8b c7	 mov	 r8, rdi
  00064	48 63 c8	 movsxd	 rcx, eax
  00067	48 8b d6	 mov	 rdx, rsi
  0006a	48 8b 4c cb 10	 mov	 rcx, QWORD PTR [rbx+rcx*8+16]
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueW
  00075	85 c0		 test	 eax, eax
  00077	74 12		 je	 SHORT $LN2@GetStrW

; 234  : 		return	FALSE;

  00079	33 c0		 xor	 eax, eax

; 235  : 
; 236  : 	return	TRUE;
; 237  : }

  0007b	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00080	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  00085	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00089	5f		 pop	 rdi
  0008a	c3		 ret	 0
$LN2@GetStrW:
  0008b	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00090	b8 01 00 00 00	 mov	 eax, 1
  00095	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  0009a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
?GetStrW@TRegistry@@QEAAHPEB_WPEA_WH@Z ENDP		; TRegistry::GetStrW
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File f:\software1\系统软件\fastcopy\fastcopy325src\src\tlib\tregist.cpp
;	COMDAT ?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z
_TEXT	SEGMENT
this$ = 48
subKey$ = 56
?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z PROC		; TRegistry::DeleteKeyW, COMDAT

; 291  : {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 292  : 	return	::RegDeleteKeyW(hKey[openCnt -1], subKey) == ERROR_SUCCESS;

  00004	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00007	4c 8b c1	 mov	 r8, rcx
  0000a	ff c8		 dec	 eax
  0000c	48 63 c8	 movsxd	 rcx, eax
  0000f	49 8b 4c c8 10	 mov	 rcx, QWORD PTR [r8+rcx*8+16]
  00014	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegDeleteKeyW
  0001a	33 c9		 xor	 ecx, ecx
  0001c	85 c0		 test	 eax, eax
  0001e	0f 94 c1	 sete	 cl
  00021	8b c1		 mov	 eax, ecx

; 293  : }

  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	c3		 ret	 0
?DeleteKeyW@TRegistry@@QEAAHPEB_W@Z ENDP		; TRegistry::DeleteKeyW
_TEXT	ENDS
END
